{"version":3,"sources":["context/AuthContext.tsx","services/api.ts","context/GithubContext.tsx","pages/Auth/style.ts","components/Login/style.ts","components/Login/index.tsx","pages/Auth/index.tsx","pages/Home/style.ts","components/Header/style.ts","components/Header/index.tsx","components/Footer/style.ts","components/Footer/index.tsx","components/Search/style.ts","components/Search/index.tsx","components/User/style.ts","components/User/loading.ts","components/User/index.tsx","pages/Home/index.tsx","pages/Repositories/style.ts","components/Repository/style.ts","components/Repository/Modal/style.ts","services/dateUtils.ts","components/Repository/Modal/index.tsx","components/Repository/index.tsx","pages/Repositories/index.tsx","routes.tsx","global.ts","index.tsx"],"names":["AuthContext","createContext","AuthProvider","children","useState","useUser","setUser","data","a","localStorage","setItem","user","toast","success","setTimeout","window","location","href","useEffect","getItem","Provider","value","signIn","signOut","removeItem","api","axios","create","baseURL","GithubContext","GithubProvider","github","setGithub","repositories","setRepositories","get","response","status","SearchGit","getRepos","Wrapper","styled","div","Content","Title","h1","FormAuth","form","FormComponent","Form","useContext","schema","Yup","shape","required","password","initialValues","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","defaultValue","type","name","placeholder","maxLength","message","Search","to","Container","Nav","End","User","Header","onClick","footer","Footer","SearchBar","input","onChange","e","target","aria-label","Box","Avatar","img","Name","h2","Flex","FlexItem","Base","BoxPulse","ContentPulse","AvatarPulse","NamePulse","FlexPulse","FlexItemPulse","src","avatar_url","alt","company","twitter_username","public_repos","followers","following","login","id","Home","Repo","RepoItem","Desc","p","Lang","Star","Open","button","Close","ModalForeground","ModalContent","Line","hr","months","getMonth","d","Modal","props","repo","open","setModal","description","full_name","language","private","default_branch","watchers_count","stargazers_count","forks_count","open_issues_count","Date","created_at","getDate","getFullYear","getHours","getMinutes","updated_at","pushed_at","Repository","useParams","length","map","Repositories","Routes","path","component","exact","Auth","createGlobalStyle","ReactDOM","render","autoClose","position","hideProgressBar","closeOnClick","pauseOnHover","draggable","document","getElementById"],"mappings":"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","file":"static/js/main.ca7d7786.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\n\r\ntype signInType = {\r\n  user: string\r\n  password: string\r\n}\r\n\r\ntype AuthCotextType = {\r\n  useUser: string\r\n\r\n  signIn: (data: signInType) => Promise<any>\r\n  signOut: () => void\r\n}\r\n\r\nexport const AuthContext = createContext({} as AuthCotextType)\r\n\r\nexport const AuthProvider: React.FC = ({ children }: any) => {\r\n  const [useUser, setUser] = useState<string | any>(null)\r\n\r\n  useEffect(() => {\r\n    const user = localStorage.getItem('@smar/user')\r\n\r\n    if (user) {\r\n      setUser(user)\r\n    }\r\n  }, [])\r\n\r\n  function signOut() {\r\n    localStorage.removeItem('@smar/user')\r\n    setUser(null)\r\n\r\n    window.location.href = '/smargithub/login'\r\n  }\r\n\r\n  async function signIn(data: signInType) {\r\n    localStorage.setItem('@smar/user', data.user)\r\n\r\n    toast.success('Autenticado com sucesso!')\r\n    setTimeout(() => {\r\n      window.location.href = '/smargithub/'\r\n    }, 2000)\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        useUser,\r\n        signIn,\r\n        signOut\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n  baseURL: `https://api.github.com`\r\n})\r\n\r\nexport default api\r\n","/* eslint-disable camelcase */\r\nimport { createContext, useState } from 'react'\r\n\r\nimport api from '../services/api'\r\n\r\ntype Repo = {\r\n  id: number\r\n  node_id: string\r\n  name: string\r\n  full_name: string\r\n  private: boolean\r\n  html_url: string\r\n  description: string\r\n  stargazers_count: number\r\n  watchers_count: number\r\n  forks_count: number\r\n  open_issues_count: number\r\n  language: string\r\n  disabled: boolean\r\n  default_branch: string\r\n  created_at: string\r\n  updated_at: string\r\n  pushed_at: string\r\n}\r\n\r\ntype GitHub = {\r\n  login: string\r\n  id: number\r\n  avatar_url: string\r\n  url: string\r\n  name: string\r\n  company: string\r\n  location: string\r\n  bio: string\r\n  twitter_username: string\r\n  public_repos: number\r\n  followers: number\r\n  following: number\r\n  created_at: string\r\n  updated_at: string\r\n}\r\n\r\ntype GithubCotextType = {\r\n  github: GitHub\r\n  repositories: Repo[]\r\n\r\n  SearchGit: (data: string) => Promise<any>\r\n  getRepos: (data: string) => Promise<any>\r\n}\r\n\r\nexport const GithubContext = createContext({} as GithubCotextType)\r\n\r\nexport const GithubProvider: React.FC = ({ children }: any) => {\r\n  const [github, setGithub] = useState<GitHub | any>(null)\r\n  const [repositories, setRepositories] = useState<Repo[] | any>(null)\r\n\r\n  async function SearchGit(data: string) {\r\n    try {\r\n      const response = await api.get(`/users/${data}`)\r\n      if (response.status === 200) {\r\n        setGithub(response.data)\r\n      }\r\n    } catch (err) {\r\n      setGithub(null)\r\n    }\r\n  }\r\n\r\n  async function getRepos(data: string) {\r\n    try {\r\n      const response = await api.get(`/users/${data}/repos`)\r\n      if (response.status === 200) setRepositories(response.data)\r\n    } catch (err) {\r\n      setGithub(null)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        github,\r\n        repositories,\r\n        SearchGit,\r\n        getRepos\r\n      }}\r\n    >\r\n      {children}\r\n    </GithubContext.Provider>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  background: #ffffff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const Content = styled.div`\r\n  padding: 5rem 3rem;\r\n  background: #001524;\r\n  border-radius: 0.5rem;\r\n  -moz-box-shadow: 0px 1px 5px 0px #676767;\r\n  -webkit-box-shadow: 0px 1px 5px 0px #676767;\r\n  box-shadow: 0px 1px 5px 0px #676767;\r\n\r\n  @media (max-width: 768px) {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 0;\r\n    padding: 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 3rem;\r\n  line-height: 1;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: #ffff;\r\n\r\n  p {\r\n    font-size: 1.25rem;\r\n    line-height: 1.75rem;\r\n    font-weight: 300;\r\n    color: #8e94a0;\r\n  }\r\n\r\n  hr {\r\n    width: 25%;\r\n    border: 0;\r\n    border-radius: 100px;\r\n    padding: 2px 0px;\r\n    background: #ffff;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    margin-top: 1rem;\r\n  }\r\n`\r\n\r\nexport const FormAuth = styled.form`\r\n  margin-top: 3.5rem;\r\n\r\n  button {\r\n    font-size: 1.5rem;\r\n    line-height: 2rem;\r\n    color: #ffff;\r\n    font-weight: 700;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border: none;\r\n    border-radius: 5px;\r\n    background: #10b981;\r\n    margin-top: 3rem;\r\n    transition: all 0.2s;\r\n  }\r\n  button:hover {\r\n    opacity: 0.75;\r\n  }\r\n`\r\n\r\nexport const FormComponent = styled.div`\r\n  margin-top: 1.5rem;\r\n\r\n  p {\r\n    font-weight: 600;\r\n    color: #fff;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  span {\r\n    color: #f87171;\r\n    font-size: 0.75rem;\r\n    line-height: 1rem;\r\n    font-weight: 300;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    font-size: 0.875rem;\r\n    line-height: 1.25rem;\r\n    border: 0;\r\n    border-bottom: 2px solid #d1d5db;\r\n    padding: 0.75rem;\r\n    background: transparent;\r\n    margin: 5px 0;\r\n    color: #d1d5db;\r\n  }\r\n\r\n  input::placeholder {\r\n    color: #d1d5db;\r\n  }\r\n\r\n  input:focus {\r\n    border-bottom: 2px solid #93c5fd;\r\n    color: #93c5fd;\r\n  }\r\n\r\n  input:-webkit-autofill,\r\n  input:-webkit-autofill:hover,\r\n  input:-webkit-autofill:focus {\r\n    border-bottom: 2px solid #34d399;\r\n    -webkit-text-fill-color: #059669;\r\n    transition: background-color 5000s ease-in-out 0s;\r\n  }\r\n`\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport { useContext } from 'react'\r\nimport * as Yup from 'yup'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { useForm } from 'react-hook-form'\r\nimport { FaUser, FaLock } from 'react-icons/fa'\r\n\r\nimport { Content, Title, FormAuth, FormComponent } from './style'\r\nimport { AuthContext } from '../../context/AuthContext'\r\n\r\nexport function Form() {\r\n  const { signIn } = useContext(AuthContext)\r\n\r\n  const schema = Yup.object().shape({\r\n    user: Yup.string().required('Informe o usuário'),\r\n    password: Yup.string().required('Informe a senha')\r\n  })\r\n\r\n  const initialValues = {\r\n    user: '',\r\n    password: ''\r\n  }\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ resolver: yupResolver(schema) })\r\n\r\n  const handleSignIn = (data: any) => signIn(data)\r\n\r\n  return (\r\n    <Content>\r\n      <Title>\r\n        SmarGithub\r\n        <p>Acesse sua conta, inserindo suas credenciais!</p>\r\n        <hr />\r\n      </Title>\r\n      <FormAuth onSubmit={handleSubmit(handleSignIn)}>\r\n        <FormComponent>\r\n          <p>\r\n            <FaUser />\r\n            &nbsp; Usuário\r\n          </p>\r\n          <input\r\n            {...register('user')}\r\n            defaultValue={initialValues.user}\r\n            type=\"text\"\r\n            name=\"user\"\r\n            placeholder=\"Informe o usuário\"\r\n            maxLength={50}\r\n          />\r\n          {errors.user && <span>{errors.user.message}</span>}\r\n        </FormComponent>\r\n        <FormComponent>\r\n          <p>\r\n            <FaLock />\r\n            &nbsp; Senha\r\n          </p>\r\n          <input\r\n            {...register('password')}\r\n            defaultValue={initialValues.password}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Insira a senha\"\r\n            maxLength={30}\r\n          />\r\n          {errors.password && <span>{errors.password.message}</span>}\r\n        </FormComponent>\r\n\r\n        <button type=\"submit\">Entrar</button>\r\n      </FormAuth>\r\n    </Content>\r\n  )\r\n}\r\n","import { useContext } from 'react'\r\nimport { Redirect } from 'react-router'\r\n\r\nimport { Wrapper } from './style'\r\nimport { Form } from '../../components/Login/index'\r\n\r\nimport { AuthContext } from '../../context/AuthContext'\r\n\r\nexport default function Search() {\r\n  const { useUser } = useContext(AuthContext)\r\n\r\n  if (useUser) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Form />\r\n    </Wrapper>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n\r\n  @media (min-width: 576px) {\r\n    max-width: 540px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    max-width: 720px;\r\n  }\r\n\r\n  @media (min-width: 992px) {\r\n    max-width: 960px;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    max-width: 1200px;\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const Nav = styled.div`\r\n  background: #001524;\r\n  width: 100%;\r\n`\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (min-width: 576px) {\r\n    max-width: 540px;\r\n\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    max-width: 720px;\r\n  }\r\n\r\n  @media (min-width: 992px) {\r\n    max-width: 960px;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    max-width: 1200px;\r\n  }\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 3rem;\r\n  line-height: 1;\r\n  font-weight: bold;\r\n  color: #ffff;\r\n  padding: 1rem 0;\r\n  width: 50%;\r\n\r\n  @media (max-width: 576px) {\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nexport const End = styled.div`\r\n  padding: 2rem 0;\r\n  width: 50%;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  background: #1b2a41;\r\n\r\n  @media (max-width: 576px) {\r\n    width: 100%;\r\n    justify-content: center;\r\n  }\r\n\r\n  button {\r\n    margin-left: 3rem;\r\n    font-size: 1.5rem;\r\n    line-height: 2rem;\r\n    margin-top: 3px;\r\n    border: none;\r\n    background: transparent;\r\n    color: #ffffff;\r\n    transition: all 0.3s;\r\n  }\r\n\r\n  button:hover {\r\n    opacity: 0.75;\r\n  }\r\n`\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  font-size: 1.25rem;\r\n  line-height: 1.75rem;\r\n  color: #ffffff;\r\n\r\n  p {\r\n    font-size: 1.125rem;\r\n    line-height: 1.75rem;\r\n    font-weight: 300;\r\n    color: #8e94a0;\r\n    margin-left: 0.75rem;\r\n  }\r\n`\r\n","import { useContext } from 'react'\r\nimport { FaSignOutAlt, FaUser } from 'react-icons/fa'\r\n\r\nimport { Nav, Title, User, Container, End } from './style'\r\nimport { AuthContext } from '../../context/AuthContext'\r\n\r\nexport function Header() {\r\n  const { useUser, signOut } = useContext(AuthContext)\r\n\r\n  return (\r\n    <Nav>\r\n      <Container>\r\n        <Title>SmarGithub</Title>\r\n        <End>\r\n          <User>\r\n            <FaUser />\r\n            <p>Olá, {useUser}!</p>\r\n          </User>\r\n          <button type=\"button\" onClick={() => signOut()}>\r\n            <FaSignOutAlt />\r\n          </button>\r\n        </End>\r\n      </Container>\r\n    </Nav>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Content = styled.footer`\r\n  background: #000000;\r\n  padding: 1.25rem;\r\n  text-align: center;\r\n\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n\r\n  p {\r\n    color: #ffffff;\r\n    font-size: 0.75rem;\r\n    line-height: 1rem;\r\n    font-weight: 300;\r\n  }\r\n`\r\n","import { Content } from './style'\r\n\r\nexport function Footer() {\r\n  return (\r\n    <Content>\r\n      <p>\r\n        Desenvolvido para o processo seletivo da <b>SMARAPD</b>\r\n      </p>\r\n    </Content>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Content = styled.div`\r\n  padding: 3rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 3rem 0rem;\r\n  }\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 2.25rem;\r\n  line-height: 2.5rem;\r\n  font-weight: 300;\r\n  text-align: center;\r\n  color: #001524;\r\n`\r\n\r\nexport const SearchBar = styled.input`\r\n  width: 75%;\r\n  text-align: left;\r\n  font-size: 1.5rem;\r\n  line-height: 2rem;\r\n  border: 0;\r\n  border-bottom: 2px solid #d1d5db;\r\n  padding: 0.75rem;\r\n  background: transparent;\r\n  margin-top: 1rem;\r\n  color: #c5c9cf;\r\n\r\n  ::placeholder {\r\n    color: #c5c9cf;\r\n    font-weight: 300;\r\n  }\r\n\r\n  :focus {\r\n    border-bottom: 2px solid #93c5fd;\r\n    color: #93c5fd;\r\n  }\r\n\r\n  :-webkit-autofill,\r\n  :-webkit-autofill:hover,\r\n  :-webkit-autofill:focus {\r\n    border-bottom: 2px solid #34d399;\r\n    -webkit-text-fill-color: #059669;\r\n    transition: background-color 5000s ease-in-out 0s;\r\n  }\r\n`\r\n","import { useContext } from 'react'\r\n\r\nimport { Title, Content, SearchBar } from './style'\r\nimport { GithubContext } from '../../context/GithubContext'\r\n\r\nexport function Search() {\r\n  const { SearchGit } = useContext(GithubContext)\r\n\r\n  return (\r\n    <Content>\r\n      <Title>Buscar usuário...</Title>\r\n      <SearchBar\r\n        onChange={e => SearchGit(e.target.value)}\r\n        placeholder=\"Digite o nome do usuário\"\r\n        aria-label=\"search-input\"\r\n      />\r\n    </Content>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Box = styled.div`\r\n  padding: 3rem;\r\n  background: #fff;\r\n  border-radius: 0.5rem;\r\n  width: 70%;\r\n\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  text-align: center;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  margin-bottom: 8rem;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nexport const Content = styled.div`\r\n  margin-bottom: 2rem;\r\n\r\n  p {\r\n    font-size: 1rem;\r\n    line-height: 1.5rem;\r\n    font-weight: 300;\r\n    color: #8e94a0;\r\n  }\r\n\r\n  p b {\r\n    font-weight: 500;\r\n  }\r\n\r\n  button {\r\n    margin-top: 4rem;\r\n    padding: 1rem 3rem;\r\n    border: none;\r\n    border-radius: 5px;\r\n    background: #818cf8;\r\n\r\n    font-size: 1.125rem;\r\n    line-height: 1.75rem;\r\n    color: #ffff;\r\n    font-weight: 700;\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nexport const Avatar = styled.img`\r\n  text-align: center;\r\n  border-radius: 100%;\r\n  width: 200px;\r\n`\r\n\r\nexport const Name = styled.h2`\r\n  font-weight: bold;\r\n  font-size: 1.5rem;\r\n  line-height: 2rem;\r\n\r\n  margin-top: 1rem;\r\n`\r\n\r\nexport const Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  @media (max-width: 768px) {\r\n    display: block;\r\n  }\r\n`\r\n\r\nexport const FlexItem = styled.div`\r\n  width: 100%;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 1rem;\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\n\r\nconst Base = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\r\n\r\n  @keyframes pulse {\r\n    0%,\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n    50% {\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n`\r\n\r\nexport const BoxPulse = styled(Base)`\r\n  padding: 3rem;\r\n  background: #fff;\r\n  border-radius: 0.5rem;\r\n  width: 70%;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  margin-bottom: 8rem;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nexport const ContentPulse = styled.div`\r\n  margin-bottom: 2rem;\r\n\r\n  span {\r\n    background: #dbeafe;\r\n    padding: 0.75rem 0;\r\n    width: 14rem;\r\n    border-radius: 5px;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    margin-top: 0.5rem;\r\n  }\r\n\r\n  span#button {\r\n    background: #dbeafe;\r\n    padding: 2rem 0;\r\n    width: 16rem;\r\n    border-radius: 5px;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    margin-top: 3rem;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n`\r\n\r\nexport const AvatarPulse = styled.div`\r\n  background: #dbeafe;\r\n  border-radius: 100%;\r\n  width: 200px;\r\n  height: 200px;\r\n\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n\r\nexport const NamePulse = styled.div`\r\n  background: #dbeafe;\r\n  padding: 1rem 0;\r\n  width: 15rem;\r\n  border-radius: 5px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  margin-top: 1rem;\r\n`\r\n\r\nexport const FlexPulse = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  @media (max-width: 768px) {\r\n    display: block;\r\n  }\r\n`\r\n\r\nexport const FlexItemPulse = styled.div`\r\n  background: #dbeafe;\r\n  padding: 1.5rem 0;\r\n  width: 10rem;\r\n  border-radius: 5px;\r\n\r\n  margin: 1rem 2rem;\r\n`\r\n","import { useContext } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { Box, Content, Avatar, Name, Flex, FlexItem } from './style'\r\nimport {\r\n  BoxPulse,\r\n  ContentPulse,\r\n  AvatarPulse,\r\n  NamePulse,\r\n  FlexPulse,\r\n  FlexItemPulse\r\n} from './loading'\r\nimport { GithubContext } from '../../context/GithubContext'\r\n\r\nexport function User() {\r\n  const { github } = useContext(GithubContext)\r\n\r\n  return github ? (\r\n    <Box>\r\n      <Content>\r\n        <Avatar src={github.avatar_url} alt=\"Avatar\" />\r\n        <Name>{github.name}</Name>\r\n      </Content>\r\n\r\n      <Content>\r\n        <p>\r\n          <b>Localidade:</b> {github.location ? github.location : 'Nenhuma.'}\r\n        </p>\r\n        <p>\r\n          <b>Empresa:</b> {github.company ? github.company : 'Nenhuma.'}\r\n        </p>\r\n        <p>\r\n          <b>Twitter:</b>{' '}\r\n          {github.twitter_username ? github.twitter_username : 'Nenhum.'}\r\n        </p>\r\n      </Content>\r\n\r\n      <Flex>\r\n        <FlexItem>\r\n          <b>{github.public_repos}</b>\r\n          <p>Repositórios</p>\r\n        </FlexItem>\r\n        <FlexItem>\r\n          <b>{github.followers}</b>\r\n          <p>Seguidores</p>\r\n        </FlexItem>\r\n        <FlexItem>\r\n          <b>{github.following}</b>\r\n          <p>Seguindo</p>\r\n        </FlexItem>\r\n      </Flex>\r\n\r\n      <Content>\r\n        <Link to={`/repositories/${github.login}`}>\r\n          <button type=\"button\">Repositórios</button>\r\n        </Link>\r\n      </Content>\r\n    </Box>\r\n  ) : (\r\n    <BoxPulse>\r\n      <ContentPulse>\r\n        <AvatarPulse />\r\n        <NamePulse />\r\n      </ContentPulse>\r\n\r\n      <ContentPulse>\r\n        <span />\r\n        <span />\r\n        <span />\r\n      </ContentPulse>\r\n\r\n      <FlexPulse>\r\n        <FlexItemPulse>\r\n          <span />\r\n        </FlexItemPulse>\r\n        <FlexItemPulse>\r\n          <span />\r\n        </FlexItemPulse>\r\n        <FlexItemPulse>\r\n          <span />\r\n        </FlexItemPulse>\r\n      </FlexPulse>\r\n\r\n      <ContentPulse>\r\n        <span id=\"button\" />\r\n      </ContentPulse>\r\n    </BoxPulse>\r\n  )\r\n}\r\n","import { useContext } from 'react'\r\nimport { Redirect } from 'react-router'\r\n\r\nimport { Container } from './style'\r\nimport { Header } from '../../components/Header/index'\r\nimport { Footer } from '../../components/Footer/index'\r\nimport { Search } from '../../components/Search/index'\r\nimport { User } from '../../components/User/index'\r\n\r\nimport { AuthContext } from '../../context/AuthContext'\r\n\r\nexport default function Home() {\r\n  const { useUser } = useContext(AuthContext)\r\n\r\n  if (!useUser) {\r\n    return <Redirect to=\"/login\" />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        <Search />\r\n        <User />\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n\r\n  @media (min-width: 576px) {\r\n    max-width: 540px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    max-width: 720px;\r\n  }\r\n\r\n  @media (min-width: 992px) {\r\n    max-width: 960px;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    max-width: 1200px;\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const Content = styled.div`\r\n  margin: 5rem 0;\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  font-weight: bold;\r\n  font-size: 1.5rem;\r\n  line-height: 2rem;\r\n\r\n  margin-bottom: 1.5rem;\r\n`\r\n\r\nexport const Repo = styled.div`\r\n  padding: 2rem;\r\n  background: #ffff;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  margin: 1rem 0;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nexport const RepoItem = styled.div`\r\n  width: 25%;\r\n\r\n  @media (max-width: 768px) {\r\n    margin: 1rem 0;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nexport const Name = styled.h2`\r\n  font-weight: 500;\r\n  font-size: 1.125rem;\r\n  line-height: 1.75rem;\r\n`\r\n\r\nexport const Desc = styled.p`\r\n  font-size: 0.875rem;\r\n  line-height: 1.25rem;\r\n  font-weight: 300;\r\n\r\n  color: #8e94a0;\r\n`\r\n\r\nexport const Lang = styled.p`\r\n  font-size: 1.125rem;\r\n  line-height: 1.75rem;\r\n  font-weight: 500;\r\n  text-align: center;\r\n`\r\n\r\nexport const Star = styled.p`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fca503;\r\n\r\n  font-size: 1.5rem;\r\n  line-height: 2rem;\r\n  font-weight: 500;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const Open = styled.button`\r\n  padding: 0.5rem 1.5rem;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background: #818cf8;\r\n  width: 70%;\r\n\r\n  float: right;\r\n\r\n  font-size: 1.125rem;\r\n  line-height: 1.75rem;\r\n  color: #ffff;\r\n  font-weight: 700;\r\n  text-align: center;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nexport const Close = styled.button`\r\n  padding: 0.5rem 1.5rem;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background: transparent;\r\n  width: 100%;\r\n\r\n  font-size: 1.5rem;\r\n  line-height: 2rem;\r\n  color: #d65a5a;\r\n  font-weight: 500;\r\n  text-align: center;\r\n  margin-top: 3rem;\r\n`\r\n\r\nexport const ModalForeground = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  z-index: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgb(0, 0, 0);\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n`\r\n\r\nexport const ModalContent = styled.div`\r\n  background-color: #fefefe;\r\n  border-radius: 5px;\r\n  padding: 2rem 3rem;\r\n  width: 40%;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 95%;\r\n  }\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  font-weight: bold;\r\n  font-size: 1.875rem;\r\n  line-height: 2.25rem;\r\n`\r\n\r\nexport const Desc = styled.p`\r\n  font-size: 1.125rem;\r\n  line-height: 1.75rem;\r\n  font-weight: 300;\r\n\r\n  color: #8e94a0;\r\n\r\n  b {\r\n    font-weight: 500;\r\n  }\r\n`\r\n\r\nexport const Line = styled.hr`\r\n  margin: 1rem auto;\r\n  border: none;\r\n  padding: 2px 0;\r\n  border-radius: 5px;\r\n  background: #e5e7eb;\r\n`\r\n","const months = [\r\n  'janeiro',\r\n  'fevereiro',\r\n  'março',\r\n  'abril',\r\n  'maio',\r\n  'junho',\r\n  'julho',\r\n  'agosto',\r\n  'setembro',\r\n  'outubro',\r\n  'novembro',\r\n  'dezembro'\r\n]\r\n\r\nexport function getMonth(d: any) {\r\n  return months[d - 1]\r\n}\r\n","/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable camelcase */\r\n\r\nimport { useState } from 'react'\r\n\r\nimport {\r\n  ModalForeground,\r\n  ModalContent,\r\n  Title,\r\n  Desc,\r\n  Line,\r\n  Open,\r\n  Close\r\n} from './style'\r\n\r\nimport { getMonth } from '../../../services/dateUtils'\r\n\r\nexport function Modal(props: any) {\r\n  const { repo } = props\r\n  const [open, setModal] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <Open type=\"button\" onClick={() => setModal(true)}>\r\n        Ver Mais\r\n      </Open>\r\n      {open ? (\r\n        <ModalForeground>\r\n          <ModalContent>\r\n            <Title>{repo.name}</Title>\r\n            <Desc>{repo.description}</Desc>\r\n            <Line />\r\n            <Desc>\r\n              <b>Nome completo:</b> {repo.full_name}\r\n            </Desc>\r\n            <Desc>\r\n              <b>Linguagem principal:</b> {repo.language}\r\n            </Desc>\r\n            <Desc>\r\n              <b>Privado:</b> {repo.private ? 'Sim' : 'Não'}\r\n            </Desc>\r\n            <Desc>\r\n              <b>Branch principal:</b> {repo.default_branch}\r\n            </Desc>\r\n            <Desc>\r\n              <b>Observadores:</b> {repo.watchers_count}\r\n            </Desc>\r\n            <Desc>\r\n              <b>Estrelas:</b> {repo.stargazers_count}\r\n            </Desc>\r\n            <Desc>\r\n              <b>Forks:</b> {repo.forks_count}\r\n            </Desc>\r\n            <Desc>\r\n              <b>Issues:</b> {repo.open_issues_count}\r\n            </Desc>\r\n            <Line />\r\n            <Desc>\r\n              <b>Criado em:</b>{' '}\r\n              {`${new Date(repo.created_at).getDate()} de ${getMonth(\r\n                new Date(repo.created_at).getMonth() + 1\r\n              )} de ${new Date(repo.created_at).getFullYear()} às ${new Date(\r\n                repo.created_at\r\n              ).getHours()}:${\r\n                new Date(repo.created_at).getMinutes() < 9\r\n                  ? `0${new Date(repo.created_at).getMinutes()}`\r\n                  : new Date(repo.created_at).getMinutes()\r\n              }`}\r\n            </Desc>\r\n            <Desc>\r\n              <b>Atualizado em:</b>\r\n              {`${new Date(repo.updated_at).getDate()} de ${getMonth(\r\n                new Date(repo.updated_at).getMonth() + 1\r\n              )} de ${new Date(repo.updated_at).getFullYear()} às ${new Date(\r\n                repo.updated_at\r\n              ).getHours()}:${\r\n                new Date(repo.updated_at).getMinutes() < 9\r\n                  ? `0${new Date(repo.updated_at).getMinutes()}`\r\n                  : new Date(repo.updated_at).getMinutes()\r\n              }`}\r\n            </Desc>\r\n            <Desc>\r\n              <b>Último Push:</b>\r\n              {`${new Date(repo.pushed_at).getDate()} de ${getMonth(\r\n                new Date(repo.pushed_at).getMonth() + 1\r\n              )} de ${new Date(repo.pushed_at).getFullYear()} às ${new Date(\r\n                repo.pushed_at\r\n              ).getHours()}:${\r\n                new Date(repo.pushed_at).getMinutes() < 9\r\n                  ? `0${new Date(repo.pushed_at).getMinutes()}`\r\n                  : new Date(repo.pushed_at).getMinutes()\r\n              }`}\r\n            </Desc>\r\n            <Close type=\"button\" onClick={() => setModal(false)}>\r\n              Fechar\r\n            </Close>\r\n          </ModalContent>\r\n        </ModalForeground>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { FaStar } from 'react-icons/fa'\r\nimport { Content, Repo, RepoItem, Name, Title, Desc, Lang, Star } from './style'\r\nimport { Modal } from './Modal/index'\r\nimport { GithubContext } from '../../context/GithubContext'\r\n\r\nexport function Repository() {\r\n  const { repositories, getRepos } = useContext(GithubContext)\r\n\r\n  const { id }: any = useParams()\r\n\r\n  useEffect(() => {\r\n    if (!id) window.location.href = '/'\r\n    getRepos(id)\r\n  })\r\n\r\n  return (\r\n    <Content>\r\n      <Title>Repositórios ({repositories ? repositories.length : 0})</Title>\r\n      {repositories && repositories.length >= 1 ? (\r\n        repositories.map(repo => {\r\n          return (\r\n            <Repo key={repo.id}>\r\n              <RepoItem>\r\n                <Name>{repo.name}</Name>\r\n                <Desc>\r\n                  {repo.description ? repo.description : 'Sem descrição.'}\r\n                </Desc>\r\n              </RepoItem>\r\n              <RepoItem>\r\n                <Lang>{repo.language ? repo.language : 'Nenhuma'}</Lang>\r\n              </RepoItem>\r\n              <RepoItem>\r\n                <Star>\r\n                  <FaStar />\r\n                  &nbsp; {repo.stargazers_count}\r\n                </Star>\r\n              </RepoItem>\r\n              <RepoItem>\r\n                <Modal repo={repo} />\r\n              </RepoItem>\r\n            </Repo>\r\n          )\r\n        })\r\n      ) : (\r\n        <>Nenhum repositório encontrado!</>\r\n      )}\r\n    </Content>\r\n  )\r\n}\r\n","import { useContext } from 'react'\r\nimport { Redirect } from 'react-router'\r\n\r\nimport { Container } from './style'\r\nimport { Header } from '../../components/Header/index'\r\nimport { Footer } from '../../components/Footer/index'\r\nimport { Repository } from '../../components/Repository'\r\n\r\nimport { AuthContext } from '../../context/AuthContext'\r\n\r\nexport default function Repositories() {\r\n  const { useUser } = useContext(AuthContext)\r\n\r\n  if (!useUser) {\r\n    return <Redirect to=\"/login\" />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        <Repository />\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n","import { Route, Switch } from 'react-router'\r\n\r\nimport Auth from './pages/Auth/index'\r\nimport Home from './pages/Home/index'\r\nimport Repositories from './pages/Repositories/index'\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" component={Home} exact />\r\n      <Route path=\"/login\" component={Auth} />\r\n      <Route path=\"/repositories/:id\" component={Repositories} />\r\n    </Switch>\r\n  )\r\n}\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    outline: 0;\r\n    font-family: 'Segoe UI'\r\n  }\r\n  body {\r\n    background: #eaeded;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n  body, input, button {\r\n    font-size: 16px;\r\n  }\r\n  h1, h2, h3, h4, h5, h6, strong {\r\n    font-weight: 500;\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n\r\n  button:focus {\r\n    outline: none;\r\n  }\r\n`\r\n","import { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\n\nimport { AuthProvider } from './context/AuthContext'\nimport { GithubProvider } from './context/GithubContext'\n\nimport Routes from './routes'\nimport GlobalStyle from './global'\nimport 'react-toastify/dist/ReactToastify.css'\n\nReactDOM.render(\n  <StrictMode>\n    <AuthProvider>\n      <GithubProvider>\n        <ToastContainer\n          autoClose={3000}\n          position=\"top-right\"\n          hideProgressBar={false}\n          closeOnClick\n          pauseOnHover\n          draggable\n        />\n        <GlobalStyle />\n        <Router>\n          <Routes />\n        </Router>\n      </GithubProvider>\n    </AuthProvider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}